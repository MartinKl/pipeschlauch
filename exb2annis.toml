[[import]]
format = "exmaralda"
path = "./data/4/SeiKo"
config = {}

[[import]]
format = "meta"
path = "./data/meta/"

[import.config]
identifier = "filename"
delimiter = ";"

[[graph_op]]
action = "map"

[graph_op.config]
rule_file = "rename_rules.toml"

[[graph_op.config.mapping.rules]]
query = "PART_CLEAN:kern=\"+DET\""
target = 1
anno = "PART_CLEAN::kern"
value = "pDET"

[[graph_op.config.mapping.rules]]
query = "PART_CLEAN:kern2=\"+DET\""
target = 1
anno = "PART_CLEAN::kern2"
value = "pDET"

[[graph_op.config.mapping.rules]]
query = "PART_CLEAN:kern3=\"+DET\""
target = 1
anno = "PART_CLEAN::kern3"
value = "pDET"


[[graph_op]]
action = "link"

[graph_op.config]
source_query = "src:id"
source_node = 1
source_value = [1]
target_query = "tgt:id"
target_node = 1
target_value = [1]
component = { ctype = "Pointing", layer = "", name = "merge" }

[[graph_op]]
action = "collapse"

[graph_op.config]
component = { ctype = "Pointing", layer = "", name = "merge" }
disjoint = true

[[graph_op]]
action = "revise"

[[graph_op.config.remove_match]]
query = "annis:node_type=/corpus/ & annis:node_type=/node/? !@* #1"
remove = [1]

[[graph_op]]
action = "check"

[graph_op.config]
report = "verbose"  # "list" or "verbose"
policy = "warn"

[[graph_op.config.tests]]
query = "excl"
expected = [1, inf]
description = "There are tokens"

[[graph_op.config.tests]]
query = "ctok_part=//"
expected = 0
description = "All lemma annotations have a non-empty value."

[[graph_op.config.tests]]
query = "ctok_part=/( )+/"
expected = 0
description = "All lemma annotations have a non-empty value after trimming."

[[graph_op.config.tests]]
query = "lemma=//"
expected = 0
description = "All lemma annotations have a non-empty value."

[[graph_op.config.tests]]
query = "lemma=/( )+/"
expected = 0
description = "All lemma annotations have a non-empty value after trimming."

[[graph_op.config.tests]]
query = "auto_lemma=//"
expected = 0
description = "All lemma annotations have a non-empty value."

[[graph_op.config.tests]]
query = "auto_lemma=/( )+/"
expected = 0
description = "All lemma annotations have a non-empty value after trimming."

[[graph_op.config.tests]]
[graph_op.config.tests.layers]
pos = [ "NN", "NE", "VAFIN", "VAIMP", "VAINF", "VAPP", "VMFIN", "VMINF", "VMPP", "VVFIN", "VVIMP", "VVINF", "VVPP", "VVIZU", "VKFIN", "VKIMP", "VKINF", "VKPP", "VKIZU", "VPFIN", "VPIMP", "VPINF", "VPPP", "VPIZU", "TRUNC", "ART", "ADJA", "ADJD", "ADV", "PDAT", "PDS", "PIAT", "PIS", "PIDAT", "PIDS", "PPER", "PPOSAT", "PPOSS", "PRELAT", "PRELS", "PRF", "PWAT", "PWS", "PWAV", "CARD", "ORD", "KON", "KOUS", "KOUI", "KOKOM", "APPR", "APPRART", "APPO", "APZR", "PTKA", "NGIRR", "PTKNEG", "PTKVZ", "PTKVZU", "PTKZU", "PTKIFG", "PTKMA", "PTKMWL", "NGHES", "NGAKW", "NGONO", "SEDM", "SEQU", "FM", "SPELL", "UI", "XY", "AB", "?" ]
excl = [ "falst", "doub", "repair", "read", "hes" ]
coord = [ "COORD" ]
unit = [ "DEC", "INT", "WINT", "IMP", "DISC", "IRNON", "SCU", "Ø", "DECBREAK", "DECDISC", "INTBREAK", "INTDISC", "WINTBREAK", "WINTDISC", "IMPBREAK", "IMPDISC" ]
unit2 = [ "DEC", "INT", "WINT", "IMP", "DISC", "IRNON", "SCU", "Ø", "DECBREAK", "DECDISC", "INTBREAK", "INTDISC", "WINTBREAK", "WINTDISC", "IMPBREAK", "IMPDISC" ]
unit3 = [ "DEC", "INT", "WINT", "IMP", "DISC", "IRNON", "SCU", "Ø", "DECBREAK", "DECDISC", "INTBREAK", "INTDISC", "WINTBREAK", "WINTDISC", "IMPBREAK", "IMPDISC" ]
unit4 = [ "DEC", "INT", "WINT", "IMP", "DISC", "IRNON", "SCU", "Ø", "DECBREAK", "DECDISC", "INTBREAK", "INTDISC", "WINTBREAK", "WINTDISC", "IMPBREAK", "IMPDISC" ]
subclause = [ "SCREL", "SCADV", "SCINDER", "SCCOMP", "SCINFUM", "SCINF", "SCNON", "MCSUBDEC", "MCSUBINT", "MCSUBWINT", "MCSUBIMP", "MCSUBDISC", "MCSUBIRNON", "MCSUBSCU", "MCSUBØ", "SCRELBREAK", "SCRELDISC", "SCRELSCU", "SCADVBREAK", "SCADVDISC", "SCADVSCU", "SCINDERBREAK", "SCINDERDISC", "SCINDERSCU", "SCCOMPBREAK", "SCCOMPDISC", "SCCOMPSCU", "SCINFUMBREAK", "SCINFUMDISC", "SCINFUMSCU", "SCINFBREAK", "SCINFDISC", "SCINFSCU", "SCNONBREAK", "SCNONDISC", "SCNONSCU", "MCSUBDECBREAK", "MCSUBDECDISC", "MCSUBINTBREAK", "MCSUBINTDISC", "MCSUBWINTBREAK", "MCSUBWINTDISC", "MCSUBIMPBREAK", "MCSUBIMPDISC" ]
subclause2 = [ "SCREL", "SCADV", "SCINDER", "SCCOMP", "SCINFUM", "SCINF", "SCNON", "MCSUBDEC", "MCSUBINT", "MCSUBWINT", "MCSUBIMP", "MCSUBDISC", "MCSUBIRNON", "MCSUBSCU", "MCSUBØ", "SCRELBREAK", "SCRELDISC", "SCRELSCU", "SCADVBREAK", "SCADVDISC", "SCADVSCU", "SCINDERBREAK", "SCINDERDISC", "SCINDERSCU", "SCCOMPBREAK", "SCCOMPDISC", "SCCOMPSCU", "SCINFUMBREAK", "SCINFUMDISC", "SCINFUMSCU", "SCINFBREAK", "SCINFDISC", "SCINFSCU", "SCNONBREAK", "SCNONDISC", "SCNONSCU", "MCSUBDECBREAK", "MCSUBDECDISC", "MCSUBINTBREAK", "MCSUBINTDISC", "MCSUBWINTBREAK", "MCSUBWINTDISC", "MCSUBIMPBREAK", "MCSUBIMPDISC" ]
subclause3 = [ "SCREL", "SCADV", "SCINDER", "SCCOMP", "SCINFUM", "SCINF", "SCNON", "MCSUBDEC", "MCSUBINT", "MCSUBWINT", "MCSUBIMP", "MCSUBDISC", "MCSUBIRNON", "MCSUBSCU", "MCSUBØ", "SCRELBREAK", "SCRELDISC", "SCRELSCU", "SCADVBREAK", "SCADVDISC", "SCADVSCU", "SCINDERBREAK", "SCINDERDISC", "SCINDERSCU", "SCCOMPBREAK", "SCCOMPDISC", "SCCOMPSCU", "SCINFUMBREAK", "SCINFUMDISC", "SCINFUMSCU", "SCINFBREAK", "SCINFDISC", "SCINFSCU", "SCNONBREAK", "SCNONDISC", "SCNONSCU", "MCSUBDECBREAK", "MCSUBDECDISC", "MCSUBINTBREAK", "MCSUBINTDISC", "MCSUBWINTBREAK", "MCSUBWINTDISC", "MCSUBIMPBREAK", "MCSUBIMPDISC" ]
subclause4 = [ "SCREL", "SCADV", "SCINDER", "SCCOMP", "SCINFUM", "SCINF", "SCNON", "MCSUBDEC", "MCSUBINT", "MCSUBWINT", "MCSUBIMP", "MCSUBDISC", "MCSUBIRNON", "MCSUBSCU", "MCSUBØ", "SCRELBREAK", "SCRELDISC", "SCRELSCU", "SCADVBREAK", "SCADVDISC", "SCADVSCU", "SCINDERBREAK", "SCINDERDISC", "SCINDERSCU", "SCCOMPBREAK", "SCCOMPDISC", "SCCOMPSCU", "SCINFUMBREAK", "SCINFUMDISC", "SCINFUMSCU", "SCINFBREAK", "SCINFDISC", "SCINFSCU", "SCNONBREAK", "SCNONDISC", "SCNONSCU", "MCSUBDECBREAK", "MCSUBDECDISC", "MCSUBINTBREAK", "MCSUBINTDISC", "MCSUBWINTBREAK", "MCSUBWINTDISC", "MCSUBIMPBREAK", "MCSUBIMPDISC" ]
subclause5 = [ "SCREL", "SCADV", "SCINDER", "SCCOMP", "SCINFUM", "SCINF", "SCNON", "MCSUBDEC", "MCSUBINT", "MCSUBWINT", "MCSUBIMP", "MCSUBDISC", "MCSUBIRNON", "MCSUBSCU", "MCSUBØ", "SCRELBREAK", "SCRELDISC", "SCRELSCU", "SCADVBREAK", "SCADVDISC", "SCADVSCU", "SCINDERBREAK", "SCINDERDISC", "SCINDERSCU", "SCCOMPBREAK", "SCCOMPDISC", "SCCOMPSCU", "SCINFUMBREAK", "SCINFUMDISC", "SCINFUMSCU", "SCINFBREAK", "SCINFDISC", "SCINFSCU", "SCNONBREAK", "SCNONDISC", "SCNONSCU", "MCSUBDECBREAK", "MCSUBDECDISC", "MCSUBINTBREAK", "MCSUBINTDISC", "MCSUBWINTBREAK", "MCSUBWINTDISC", "MCSUBIMPBREAK", "MCSUBIMPDISC" ]
unit_cons = [ "V", "S", "Sexpl", "Scl", "Sext", "O", "Oexpl", "Ocl", "Oext", "A", "Aext", "Pred", "Predcl", "cl", "ext", "N", "C", "X", "Xcl", "@" ]
unit_stage = [ "nostage", "nostagekor", "SV", "SVX", "SVO", "ADV", "SEP", "NOSEP", "SEPnoev", "SEPanti", "SEP ADV", "NOSEP ADV", "SEPnoev ADV", "SEPanti ADV", "INV", "INVnoev", "INVpseudo", "INVin", "INV SEP", "INVpseudo SEP", "INVin SEP", "INV SEPnoev", "VEND", "VENDnoev", "!VEND", "!SV NOVEND", "!SVX NOVEND", "!SVO NOVEND", "!ADV NOVEND", "!SEP NOVEND", "!NOSEP NOVEND", "!SEPnoev NOVEND", "!SEP !INVpseudo NOVEND", "!INV NOVEND", "!INVnoev", "!INVpseudo NOVEND", "!INVpseudo VENDnoev", "V1imp" ]
unit2_cons = [ "V", "S", "Sexpl", "Scl", "Sext", "O", "Oexpl", "Ocl", "Oext", "A", "Aext", "Pred", "Predcl", "cl", "ext", "N", "C", "X", "Xcl", "@" ]
unit2_stage = [ "nostage", "nostagekor", "SV", "SVX", "SVO", "ADV", "SEP", "NOSEP", "SEPnoev", "SEPanti", "SEP ADV", "NOSEP ADV", "SEPnoev ADV", "SEPanti ADV", "INV", "INVnoev", "INVpseudo", "INVin", "INV SEP", "INVpseudo SEP", "INVin SEP", "INV SEPnoev", "VEND", "VENDnoev", "!VEND", "!SV NOVEND", "!SVX NOVEND", "!SVO NOVEND", "!ADV NOVEND", "!SEP NOVEND", "!NOSEP NOVEND", "!SEPnoev NOVEND", "!SEP !INVpseudo NOVEND", "!INV NOVEND", "!INVnoev", "!INVpseudo NOVEND", "!INVpseudo VENDnoev", "V1imp" ]
unit3_cons = [ "V", "S", "Sexpl", "Scl", "Sext", "O", "Oexpl", "Ocl", "Oext", "A", "Aext", "Pred", "Predcl", "cl", "ext", "N", "C", "X", "Xcl", "@" ]
unit3_stage = [ "nostage", "nostagekor", "SV", "SVX", "SVO", "ADV", "SEP", "NOSEP", "SEPnoev", "SEPanti", "SEP ADV", "NOSEP ADV", "SEPnoev ADV", "SEPanti ADV", "INV", "INVnoev", "INVpseudo", "INVin", "INV SEP", "INVpseudo SEP", "INVin SEP", "INV SEPnoev", "VEND", "VENDnoev", "!VEND", "!SV NOVEND", "!SVX NOVEND", "!SVO NOVEND", "!ADV NOVEND", "!SEP NOVEND", "!NOSEP NOVEND", "!SEPnoev NOVEND", "!SEP !INVpseudo NOVEND", "!INV NOVEND", "!INVnoev", "!INVpseudo NOVEND", "!INVpseudo VENDnoev", "V1imp" ]
unit4_cons = [ "V", "S", "Sexpl", "Scl", "Sext", "O", "Oexpl", "Ocl", "Oext", "A", "Aext", "Pred", "Predcl", "cl", "ext", "N", "C", "X", "Xcl", "@" ]
unit4_stage = [ "nostage", "nostagekor", "SV", "SVX", "SVO", "ADV", "SEP", "NOSEP", "SEPnoev", "SEPanti", "SEP ADV", "NOSEP ADV", "SEPnoev ADV", "SEPanti ADV", "INV", "INVnoev", "INVpseudo", "INVin", "INV SEP", "INVpseudo SEP", "INVin SEP", "INV SEPnoev", "VEND", "VENDnoev", "!VEND", "!SV NOVEND", "!SVX NOVEND", "!SVO NOVEND", "!ADV NOVEND", "!SEP NOVEND", "!NOSEP NOVEND", "!SEPnoev NOVEND", "!SEP !INVpseudo NOVEND", "!INV NOVEND", "!INVnoev", "!INVpseudo NOVEND", "!INVpseudo VENDnoev", "V1imp" ]
subclause_cons = [ "V", "S", "Sexpl", "Scl", "Sext", "O", "Oexpl", "Ocl", "Oext", "A", "Aext", "Pred", "Predcl", "cl", "ext", "N", "C", "X", "Xcl", "@" ]
subclause_stage = [ "nostage", "nostagekor", "SV", "SVX", "SVO", "ADV", "SEP", "NOSEP", "SEPnoev", "SEPanti", "SEP ADV", "NOSEP ADV", "SEPnoev ADV", "SEPanti ADV", "INV", "INVnoev", "INVpseudo", "INVin", "INV SEP", "INVpseudo SEP", "INVin SEP", "INV SEPnoev", "VEND", "VENDnoev", "!VEND", "!SV NOVEND", "!SVX NOVEND", "!SVO NOVEND", "!ADV NOVEND", "!SEP NOVEND", "!NOSEP NOVEND", "!SEPnoev NOVEND", "!SEP !INVpseudo NOVEND", "!INV NOVEND", "!INVnoev", "!INVpseudo NOVEND", "!INVpseudo VENDnoev", "V1imp" ]
subclause2_cons = [ "V", "S", "Sexpl", "Scl", "Sext", "O", "Oexpl", "Ocl", "Oext", "A", "Aext", "Pred", "Predcl", "cl", "ext", "N", "C", "X", "Xcl", "@" ]
subclause2_stage = [ "nostage", "nostagekor", "SV", "SVX", "SVO", "ADV", "SEP", "NOSEP", "SEPnoev", "SEPanti", "SEP ADV", "NOSEP ADV", "SEPnoev ADV", "SEPanti ADV", "INV", "INVnoev", "INVpseudo", "INVin", "INV SEP", "INVpseudo SEP", "INVin SEP", "INV SEPnoev", "VEND", "VENDnoev", "!VEND", "!SV NOVEND", "!SVX NOVEND", "!SVO NOVEND", "!ADV NOVEND", "!SEP NOVEND", "!NOSEP NOVEND", "!SEPnoev NOVEND", "!SEP !INVpseudo NOVEND", "!INV NOVEND", "!INVnoev", "!INVpseudo NOVEND", "!INVpseudo VENDnoev", "V1imp" ]
subclause3_cons = [ "V", "S", "Sexpl", "Scl", "Sext", "O", "Oexpl", "Ocl", "Oext", "A", "Aext", "Pred", "Predcl", "cl", "ext", "N", "C", "X", "Xcl", "@" ]
subclause3_stage = [ "nostage", "nostagekor", "SV", "SVX", "SVO", "ADV", "SEP", "NOSEP", "SEPnoev", "SEPanti", "SEP ADV", "NOSEP ADV", "SEPnoev ADV", "SEPanti ADV", "INV", "INVnoev", "INVpseudo", "INVin", "INV SEP", "INVpseudo SEP", "INVin SEP", "INV SEPnoev", "VEND", "VENDnoev", "!VEND", "!SV NOVEND", "!SVX NOVEND", "!SVO NOVEND", "!ADV NOVEND", "!SEP NOVEND", "!NOSEP NOVEND", "!SEPnoev NOVEND", "!SEP !INVpseudo NOVEND", "!INV NOVEND", "!INVnoev", "!INVpseudo NOVEND", "!INVpseudo VENDnoev", "V1imp" ]
subclause4_cons = [ "V", "S", "Sexpl", "Scl", "Sext", "O", "Oexpl", "Ocl", "Oext", "A", "Aext", "Pred", "Predcl", "cl", "ext", "N", "C", "X", "Xcl", "@" ]
subclause4_stage = [ "nostage", "nostagekor", "SV", "SVX", "SVO", "ADV", "SEP", "NOSEP", "SEPnoev", "SEPanti", "SEP ADV", "NOSEP ADV", "SEPnoev ADV", "SEPanti ADV", "INV", "INVnoev", "INVpseudo", "INVin", "INV SEP", "INVpseudo SEP", "INVin SEP", "INV SEPnoev", "VEND", "VENDnoev", "!VEND", "!SV NOVEND", "!SVX NOVEND", "!SVO NOVEND", "!ADV NOVEND", "!SEP NOVEND", "!NOSEP NOVEND", "!SEPnoev NOVEND", "!SEP !INVpseudo NOVEND", "!INV NOVEND", "!INVnoev", "!INVpseudo NOVEND", "!INVpseudo VENDnoev", "V1imp" ]
subclause5_cons = [ "V", "S", "Sexpl", "Scl", "Sext", "O", "Oexpl", "Ocl", "Oext", "A", "Aext", "Pred", "Predcl", "cl", "ext", "N", "C", "X", "Xcl", "@" ]
subclause5_stage = [ "nostage", "nostagekor", "SV", "SVX", "SVO", "ADV", "SEP", "NOSEP", "SEPnoev", "SEPanti", "SEP ADV", "NOSEP ADV", "SEPnoev ADV", "SEPanti ADV", "INV", "INVnoev", "INVpseudo", "INVin", "INV SEP", "INVpseudo SEP", "INVin SEP", "INV SEPnoev", "VEND", "VENDnoev", "!VEND", "!SV NOVEND", "!SVX NOVEND", "!SVO NOVEND", "!ADV NOVEND", "!SEP NOVEND", "!NOSEP NOVEND", "!SEPnoev NOVEND", "!SEP !INVpseudo NOVEND", "!INV NOVEND", "!INVnoev", "!INVpseudo NOVEND", "!INVpseudo VENDnoev", "V1imp" ]
ngr = [ "NGrO", "NGrCO", "NGrADJ", "NGrPRT", "NGrEXPRT", "NGrGEN", "NGrSO", "NGrPADV", "NGrPREP", "NGrPGEN", "NGrPEX", "NGrAPP", "NGrREL", "NGrINF", "NGrCOMP", "NGrMULT", "ADJ", "PRT", "EXPRT", "GEN", "PADV", "PREP", "PGEN", "PEX", "APP", "REL", "INF", "COMP", "NGrMULTADJGEN", "NGrMULTADJPREP", "NGrMULTADJPGEN", "NGrMULTADJAPP", "NGrMULTADJREL", "NGrMULTADJPRT", "NGrMULTADJEXPRT", "NGrMULTADJPADV", "NGrMULTADJPEX", "NGrMULTADJINF", "NGrMULTADJCOMP", "NGrMULTGENPREP", "NGrMULTGENPGEN", "NGrMULTGENAPP", "NGrMULTGENREL", "NGrMULTGENPRT", "NGrMULTGENEXPRT", "NGrMULTGENPADV", "NGrMULTGENPEX", "NGrMULTGENINF", "NGrMULTGENCOMP", "NGrMULTPREPPGEN", "NGrMULTPREPAPP", "NGrMULTPREPREL", "NGrMULTPREPPRT", "NGrMULTPREPEXPRT", "NGrMULTPREPPADV", "NGrMULTPREPPEX", "NGrMULTPREPINF", "NGrMULTPREPCOMP", "NGrMULTPGENAPP", "NGrMULTPGENREL", "NGrMULTPGENPRT", "NGrMULTPGENEXPRT", "NGrMULTPGENPADV", "NGrMULTPGENPEX", "NGrMULTPGENINF", "NGrMULTPGENCOMP", "NGrMULTAPPREL", "NGrMULTAPPPRT", "NGrMULTAPPEXPRT", "NGrMULTAPPPADV", "NGrMULTAPPPEX", "NGrMULTAPPINF", "NGrMULTAPPCOMP", "NGrMULTRELPRT", "NGrMULTRELEXPRT", "NGrMULTRELPADV", "NGrMULTRELPEX", "NGrMULTRELINF", "NGrMULTRELCOMP", "NGrMULTPRTEXPRT", "NGrMULTPRTPADV", "NGrMULTPRTPEX", "NGrMULTPRTINF", "NGrMULTPRTCOMP", "NGrMULTEXPRTPADV", "NGrMULTEXPRTPEX", "NGrMULTEXPRTINF", "NGrMULTEXPRTCOMP", "NGrMULTPADVPEX", "NGrMULTPADVINF", "NGrMULTPADVCOMP", "NGrMULTPEXINF", "NGrMULTPEXCOMP", "NGrMULTINFCOMP" ]
kern = [ "DET", "KERN", "KERN0DET", "KERNpDET" ]
ngr2 = [ "NGrO", "NGrCO", "NGrADJ", "NGrPRT", "NGrEXPRT", "NGrGEN", "NGrSO", "NGrPADV", "NGrPREP", "NGrPGEN", "NGrPEX", "NGrAPP", "NGrREL", "NGrINF", "NGrCOMP", "NGrMULT", "ADJ", "PRT", "EXPRT", "GEN", "PADV", "PREP", "PGEN", "PEX", "APP", "REL", "INF", "COMP", "NGrMULTADJGEN", "NGrMULTADJPREP", "NGrMULTADJPGEN", "NGrMULTADJAPP", "NGrMULTADJREL", "NGrMULTADJPRT", "NGrMULTADJEXPRT", "NGrMULTADJPADV", "NGrMULTADJPEX", "NGrMULTADJINF", "NGrMULTADJCOMP", "NGrMULTGENPREP", "NGrMULTGENPGEN", "NGrMULTGENAPP", "NGrMULTGENREL", "NGrMULTGENPRT", "NGrMULTGENEXPRT", "NGrMULTGENPADV", "NGrMULTGENPEX", "NGrMULTGENINF", "NGrMULTGENCOMP", "NGrMULTPREPPGEN", "NGrMULTPREPAPP", "NGrMULTPREPREL", "NGrMULTPREPPRT", "NGrMULTPREPEXPRT", "NGrMULTPREPPADV", "NGrMULTPREPPEX", "NGrMULTPREPINF", "NGrMULTPREPCOMP", "NGrMULTPGENAPP", "NGrMULTPGENREL", "NGrMULTPGENPRT", "NGrMULTPGENEXPRT", "NGrMULTPGENPADV", "NGrMULTPGENPEX", "NGrMULTPGENINF", "NGrMULTPGENCOMP", "NGrMULTAPPREL", "NGrMULTAPPPRT", "NGrMULTAPPEXPRT", "NGrMULTAPPPADV", "NGrMULTAPPPEX", "NGrMULTAPPINF", "NGrMULTAPPCOMP", "NGrMULTRELPRT", "NGrMULTRELEXPRT", "NGrMULTRELPADV", "NGrMULTRELPEX", "NGrMULTRELINF", "NGrMULTRELCOMP", "NGrMULTPRTEXPRT", "NGrMULTPRTPADV", "NGrMULTPRTPEX", "NGrMULTPRTINF", "NGrMULTPRTCOMP", "NGrMULTEXPRTPADV", "NGrMULTEXPRTPEX", "NGrMULTEXPRTINF", "NGrMULTEXPRTCOMP", "NGrMULTPADVPEX", "NGrMULTPADVINF", "NGrMULTPADVCOMP", "NGrMULTPEXINF", "NGrMULTPEXCOMP", "NGrMULTINFCOMP" ]
kern2 = [ "DET", "KERN", "KERN0DET", "KERNpDET" ]
ngr3 = [ "NGrO", "NGrCO", "NGrADJ", "NGrPRT", "NGrEXPRT", "NGrGEN", "NGrSO", "NGrPADV", "NGrPREP", "NGrPGEN", "NGrPEX", "NGrAPP", "NGrREL", "NGrINF", "NGrCOMP", "NGrMULT", "ADJ", "PRT", "EXPRT", "GEN", "PADV", "PREP", "PGEN", "PEX", "APP", "REL", "INF", "COMP", "NGrMULTADJGEN", "NGrMULTADJPREP", "NGrMULTADJPGEN", "NGrMULTADJAPP", "NGrMULTADJREL", "NGrMULTADJPRT", "NGrMULTADJEXPRT", "NGrMULTADJPADV", "NGrMULTADJPEX", "NGrMULTADJINF", "NGrMULTADJCOMP", "NGrMULTGENPREP", "NGrMULTGENPGEN", "NGrMULTGENAPP", "NGrMULTGENREL", "NGrMULTGENPRT", "NGrMULTGENEXPRT", "NGrMULTGENPADV", "NGrMULTGENPEX", "NGrMULTGENINF", "NGrMULTGENCOMP", "NGrMULTPREPPGEN", "NGrMULTPREPAPP", "NGrMULTPREPREL", "NGrMULTPREPPRT", "NGrMULTPREPEXPRT", "NGrMULTPREPPADV", "NGrMULTPREPPEX", "NGrMULTPREPINF", "NGrMULTPREPCOMP", "NGrMULTPGENAPP", "NGrMULTPGENREL", "NGrMULTPGENPRT", "NGrMULTPGENEXPRT", "NGrMULTPGENPADV", "NGrMULTPGENPEX", "NGrMULTPGENINF", "NGrMULTPGENCOMP", "NGrMULTAPPREL", "NGrMULTAPPPRT", "NGrMULTAPPEXPRT", "NGrMULTAPPPADV", "NGrMULTAPPPEX", "NGrMULTAPPINF", "NGrMULTAPPCOMP", "NGrMULTRELPRT", "NGrMULTRELEXPRT", "NGrMULTRELPADV", "NGrMULTRELPEX", "NGrMULTRELINF", "NGrMULTRELCOMP", "NGrMULTPRTEXPRT", "NGrMULTPRTPADV", "NGrMULTPRTPEX", "NGrMULTPRTINF", "NGrMULTPRTCOMP", "NGrMULTEXPRTPADV", "NGrMULTEXPRTPEX", "NGrMULTEXPRTINF", "NGrMULTEXPRTCOMP", "NGrMULTPADVPEX", "NGrMULTPADVINF", "NGrMULTPADVCOMP", "NGrMULTPEXINF", "NGrMULTPEXCOMP", "NGrMULTINFCOMP" ]
kern3 = [ "DET", "KERN", "KERN0DET", "KERNpDET" ]
# kon
# adv_kon
# mult_kon

[[graph_op]]
action = "revise"

[graph_op.config.namespaces]
"PART_CLEAN" = "clean"
"A02" = "part"
"A04" = "part"
"A05" = "part"
"B01" = "part"
"B02" = "part"
"B07" = "part"
"B08" = "part"
"B09" = "part"
"B10" = "part"
"B11" = "part"
"C01" = "part"
"C02" = "part"
"C03" = "part"
"C04" = "part"
"C05" = "part"
"D01" = "part"
"D02" = "part"
"D03" = "part"
"D04" = "part"
"D05" = "part"

[[export]]
format = "graphml"
path = "./data/5_annis/"

[export.config]
guess_vis = true
zip = true
